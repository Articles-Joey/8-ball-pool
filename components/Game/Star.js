/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const link = `${process.env.NEXT_PUBLIC_CDN}games/Race Game/star.gltf`

export function Star(props) {

    const { nodes, materials } = useGLTF(link);
    const starRef = useRef();

    // Rotation animation
    useFrame(() => {
        if (starRef.current) {
            starRef.current.rotation.z += 0.005; // Adjust the rotation speed as needed
        }
    });

    // Bobbing animation
    useFrame(({ clock }) => {
        if (starRef.current) {
            starRef.current.position.y =
                Math.sin(clock.elapsedTime) * 0.2 + 1; // Adjust the amplitude (0.1) as needed
        }
    });

    return (
        <group {...props} dispose={null}>

            <mesh
                ref={starRef}
                castShadow
                receiveShadow
                geometry={nodes.star.geometry}
                material={materials["Yellow.030"]}
                rotation={[Math.PI / 2, 0, 0]}
                position={[0, 1, 0]}
                emissive={"yellow"} // glow color
                emissiveIntensity={10} // adjust for subtle glow
            />

            <pointLight
                position={[0.6, 1, 0.6]}
                intensity={2000}
                distance={200}
                color={"yellow"}
                castShadow
            />

        </group>
    );
}

useGLTF.preload(link);
