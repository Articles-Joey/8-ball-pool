/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 models\Punk.gltf --output output\Punk.js --transform 
Files: models\Punk.gltf [3.06MB] > E:\Downloads\women\output\Punk-transformed.glb [761.79KB] (75%)
*/

import React, { useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

const link = `${process.env.NEXT_PUBLIC_CDN}games/Assets/Quaternius/women/Punk-transformed.glb`

export function Model(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF(link)
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  useEffect(() => {

    console.log("Actions", actions)

    actions[`Idle`].play();

}, [actions]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Root} />
        </group>
        <group name="Punk_Body">
          <skinnedMesh name="Cube049" geometry={nodes.Cube049.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube049.skeleton} />
          <skinnedMesh name="Cube049_1" geometry={nodes.Cube049_1.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube049_1.skeleton} />
          <skinnedMesh name="Cube049_2" geometry={nodes.Cube049_2.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube049_2.skeleton} />
        </group>
        <group name="Punk_Feet">
          <skinnedMesh name="Cube050" geometry={nodes.Cube050.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube050.skeleton} />
          <skinnedMesh name="Cube050_1" geometry={nodes.Cube050_1.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube050_1.skeleton} />
        </group>
        <group name="Punk_Head">
          <skinnedMesh name="Cube031" geometry={nodes.Cube031.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube031.skeleton} />
          <skinnedMesh name="Cube031_1" geometry={nodes.Cube031_1.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube031_1.skeleton} />
          <skinnedMesh name="Cube031_2" geometry={nodes.Cube031_2.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube031_2.skeleton} />
          <skinnedMesh name="Cube031_3" geometry={nodes.Cube031_3.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube031_3.skeleton} />
          <skinnedMesh name="Cube031_4" geometry={nodes.Cube031_4.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube031_4.skeleton} />
        </group>
        <group name="Punk_Legs">
          <skinnedMesh name="Cube005" geometry={nodes.Cube005.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube005.skeleton} />
          <skinnedMesh name="Cube005_1" geometry={nodes.Cube005_1.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Cube005_1.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload(link)
